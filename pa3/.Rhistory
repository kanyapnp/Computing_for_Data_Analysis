best_hospitals <- c()
states <- c()
for (state in states_list){
hospital <- rankhospital(state, outcome, num)
best_hospitals <- append(best_hospitals, hospital)
states <- append(states, state)
}
warnings
warnings()
states
# rankall <- function(outcome, num = "best") {
## Read outcome data
## Check that state and outcome are valid
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
outcome <- "heart attack"
num <- 20
#-------------------------------------------------------------
#
#   #initialize the outcome
#   outcome_list <- c(11,17,23)
#   names(outcome_list) <- c("heart attack", "heart failure", "pneumonia")
#
#   #the collumn of name
#   name_col <- 2
#
#   #check outcome input
#   if (!(outcome %in% names(outcome_list))){
#     stop("invalid outcome")
#   }
#
#   #set the outcome to the column
#   col_id = outcome_list[outcome]
#
#
#   #read the data
#   outcome.all <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
#
#   #convert character to numeric
#   outcome.all[,outcome_list[outcome]] <- as.numeric(outcome.all[,outcome_list[outcome]])
#
#
#   #clean the data
#   is_na <- is.na(outcome.all[,col_id])
#   outcome.all <- outcome.all[!is_na,]
#
#   #the number of hospitals in the state
#   num_hospitals <- nrow(outcome.all)
#
#
#   #check the num input
#   if (num == "best"){
#     num <- 1
#   }
#   if (num == "worst"){
#     num = num_hospitals
#   }
#   if (num <1 || num > num_hospitals){
#     return(NA)
#   }
#
#
#   #order the hospitals by outcome
#   outcome.order <- outcome.all[with(outcome.state, order(outcome.all[,col_id],
#                                                            outcome.all[,name_col])),]
#
source("rankhospital.R")
dataset <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
#check the state input
states_list <- c("AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DC", "DE", "FL", "GA", "GU", "HI", "IA", "ID", "IL", "IN", "KS", "KY",
"LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK",
"OR", "PA", "PR", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VI", "VT", "WA", "WI", "WV", "WY")
best_hospitals <- c()
states <- c()
for (state in states_list){
hospital <- rankhospital(state, outcome, num, dataset)
best_hospitals <- append(best_hospitals, hospital)
states <- append(states, state)
}
output <- data.frame(hospital=best_hospitals, state=states)
print(output)
# rankall <- function(outcome, num = "best") {
## Read outcome data
## Check that state and outcome are valid
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
outcome <- "heart attack"
num <- 20
#-------------------------------------------------------------
#
#   #initialize the outcome
#   outcome_list <- c(11,17,23)
#   names(outcome_list) <- c("heart attack", "heart failure", "pneumonia")
#
#   #the collumn of name
#   name_col <- 2
#
#   #check outcome input
#   if (!(outcome %in% names(outcome_list))){
#     stop("invalid outcome")
#   }
#
#   #set the outcome to the column
#   col_id = outcome_list[outcome]
#
#
#   #read the data
#   outcome.all <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
#
#   #convert character to numeric
#   outcome.all[,outcome_list[outcome]] <- as.numeric(outcome.all[,outcome_list[outcome]])
#
#
#   #clean the data
#   is_na <- is.na(outcome.all[,col_id])
#   outcome.all <- outcome.all[!is_na,]
#
#   #the number of hospitals in the state
#   num_hospitals <- nrow(outcome.all)
#
#
#   #check the num input
#   if (num == "best"){
#     num <- 1
#   }
#   if (num == "worst"){
#     num = num_hospitals
#   }
#   if (num <1 || num > num_hospitals){
#     return(NA)
#   }
#
#
#   #order the hospitals by outcome
#   outcome.order <- outcome.all[with(outcome.state, order(outcome.all[,col_id],
#                                                            outcome.all[,name_col])),]
#
source("rankhospital.R")
dataset <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
#check the state input
states_list <- c("AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DC", "DE", "FL", "GA", "GU", "HI", "IA", "ID", "IL", "IN", "KS", "KY",
"LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK",
"OR", "PA", "PR", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VI", "VT", "WA", "WI", "WV", "WY")
best_hospitals <- c()
states <- c()
for (state in states_list){
hospital <- rankhospital(state, outcome, num, dataset)
best_hospitals <- append(best_hospitals, hospital)
states <- append(states, state)
}
output <- data.frame(hospital=best_hospitals, state=states)
print(output)
submit()
rankall <- function(outcome, num = "best") {
## Read outcome data
## Check that state and outcome are valid
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
outcome <- "heart attack"
num <- 20
#-------------------------------------------------------------
#
#   #initialize the outcome
#   outcome_list <- c(11,17,23)
#   names(outcome_list) <- c("heart attack", "heart failure", "pneumonia")
#
#   #the collumn of name
#   name_col <- 2
#
#   #check outcome input
#   if (!(outcome %in% names(outcome_list))){
#     stop("invalid outcome")
#   }
#
#   #set the outcome to the column
#   col_id = outcome_list[outcome]
#
#
#   #read the data
#   outcome.all <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
#
#   #convert character to numeric
#   outcome.all[,outcome_list[outcome]] <- as.numeric(outcome.all[,outcome_list[outcome]])
#
#
#   #clean the data
#   is_na <- is.na(outcome.all[,col_id])
#   outcome.all <- outcome.all[!is_na,]
#
#   #the number of hospitals in the state
#   num_hospitals <- nrow(outcome.all)
#
#
#   #check the num input
#   if (num == "best"){
#     num <- 1
#   }
#   if (num == "worst"){
#     num = num_hospitals
#   }
#   if (num <1 || num > num_hospitals){
#     return(NA)
#   }
#
#
#   #order the hospitals by outcome
#   outcome.order <- outcome.all[with(outcome.state, order(outcome.all[,col_id],
#                                                            outcome.all[,name_col])),]
#
source("rankhospital.R")
dataset <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
#check the state input
states_list <- c("AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DC", "DE", "FL", "GA", "GU", "HI", "IA", "ID", "IL", "IN", "KS", "KY",
"LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK",
"OR", "PA", "PR", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VI", "VT", "WA", "WI", "WV", "WY")
best_hospitals <- c()
states <- c()
for (state in states_list){
hospital <- rankhospital(state, outcome, num, dataset)
best_hospitals <- append(best_hospitals, hospital)
states <- append(states, state)
}
output <- data.frame(hospital=best_hospitals, state=states)
}
submit()
warnings()
rankall <- function(outcome, num = "best") {
## Read outcome data
## Check that state and outcome are valid
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
outcome <- "heart attack"
num <- 20
#-------------------------------------------------------------
#
#   #initialize the outcome
#   outcome_list <- c(11,17,23)
#   names(outcome_list) <- c("heart attack", "heart failure", "pneumonia")
#
#   #the collumn of name
#   name_col <- 2
#
#   #check outcome input
#   if (!(outcome %in% names(outcome_list))){
#     stop("invalid outcome")
#   }
#
#   #set the outcome to the column
#   col_id = outcome_list[outcome]
#
#
#   #read the data
#   outcome.all <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
#
#   #convert character to numeric
#   outcome.all[,outcome_list[outcome]] <- as.numeric(outcome.all[,outcome_list[outcome]])
#
#
#   #clean the data
#   is_na <- is.na(outcome.all[,col_id])
#   outcome.all <- outcome.all[!is_na,]
#
#   #the number of hospitals in the state
#   num_hospitals <- nrow(outcome.all)
#
#
#   #check the num input
#   if (num == "best"){
#     num <- 1
#   }
#   if (num == "worst"){
#     num = num_hospitals
#   }
#   if (num <1 || num > num_hospitals){
#     return(NA)
#   }
#
#
#   #order the hospitals by outcome
#   outcome.order <- outcome.all[with(outcome.state, order(outcome.all[,col_id],
#                                                            outcome.all[,name_col])),]
#
source("rankhospital.R")
dataset <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
#check the state input
states_list <- c("AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DC", "DE", "FL", "GA", "GU", "HI", "IA", "ID", "IL", "IN", "KS", "KY",
"LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK",
"OR", "PA", "PR", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VI", "VT", "WA", "WI", "WV", "WY")
best_hospitals <- c()
states <- c()
for (state in states_list){
hospital <- rankhospital(state, outcome, num, dataset)
best_hospitals <- append(best_hospitals, hospital)
states <- append(states, state)
}
output <- data.frame(hospital=best_hospitals, state=states)
}
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
rankall <- function(outcome, num = "best") {
## Read outcome data
## Check that state and outcome are valid
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
outcome <- "heart attack"
num <- 20
#-------------------------------------------------------------
#
#   #initialize the outcome
#   outcome_list <- c(11,17,23)
#   names(outcome_list) <- c("heart attack", "heart failure", "pneumonia")
#
#   #the collumn of name
#   name_col <- 2
#
#   #check outcome input
#   if (!(outcome %in% names(outcome_list))){
#     stop("invalid outcome")
#   }
#
#   #set the outcome to the column
#   col_id = outcome_list[outcome]
#
#
#   #read the data
#   outcome.all <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
#
#   #convert character to numeric
#   outcome.all[,outcome_list[outcome]] <- as.numeric(outcome.all[,outcome_list[outcome]])
#
#
#   #clean the data
#   is_na <- is.na(outcome.all[,col_id])
#   outcome.all <- outcome.all[!is_na,]
#
#   #the number of hospitals in the state
#   num_hospitals <- nrow(outcome.all)
#
#
#   #check the num input
#   if (num == "best"){
#     num <- 1
#   }
#   if (num == "worst"){
#     num = num_hospitals
#   }
#   if (num <1 || num > num_hospitals){
#     return(NA)
#   }
#
#
#   #order the hospitals by outcome
#   outcome.order <- outcome.all[with(outcome.state, order(outcome.all[,col_id],
#                                                            outcome.all[,name_col])),]
#
source("rankhospital.R")
dataset <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
#check the state input
states_list <- c("AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DC", "DE", "FL", "GA", "GU", "HI", "IA", "ID", "IL", "IN", "KS", "KY",
"LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK",
"OR", "PA", "PR", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VI", "VT", "WA", "WI", "WV", "WY")
best_hospitals <- c()
states <- c()
for (state in states_list){
hospital <- rankhospital(state, outcome, num, dataset)
best_hospitals <- append(best_hospitals, hospital)
states <- append(states, state)
}
output <- data.frame(hospital=best_hospitals, state=states)
}
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
head(rankall("heart attack", 20), 10)
warnings()
rankall <- function(outcome, num = "best") {
## Read outcome data
## Check that state and outcome are valid
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
#-------------------------------------------------------------
source("rankhospital.R")
dataset <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
#check the state input
states_list <- c("AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DC", "DE", "FL", "GA", "GU", "HI", "IA", "ID", "IL", "IN", "KS", "KY",
"LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK",
"OR", "PA", "PR", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VI", "VT", "WA", "WI", "WV", "WY")
best_hospitals <- c()
states <- c()
for (state in states_list){
hospital <- rankhospital(state, outcome, num, dataset)
best_hospitals <- append(best_hospitals, hospital)
states <- append(states, state)
}
output <- data.frame(hospital=best_hospitals, state=states)
}
tail(rankall("pneumonia", "worst"), 3)
submit()
source("http://spark-public.s3.amazonaws.com/compdata/scripts/submitscript.R")
submit()
submit()
submit()
rankall <- function(outcome, num = "best") {
## Read outcome data
## Check that state and outcome are valid
## For each state, find the hospital of the given rank
## Return a data frame with the hospital names and the
## (abbreviated) state name
#-------------------------------------------------------------
source("rankhospital.R")
dataset <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
dataset[,outcome_list[outcome]] <- as.numeric(dataset[,outcome_list[outcome]])
#check the state input
states_list <- c("AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DC", "DE", "FL", "GA", "GU", "HI", "IA", "ID", "IL", "IN", "KS", "KY",
"LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK",
"OR", "PA", "PR", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VI", "VT", "WA", "WI", "WV", "WY")
best_hospitals <- c()
states <- c()
for (state in states_list){
hospital <- rankhospital(state, outcome, num, dataset)
best_hospitals <- append(best_hospitals, hospital)
states <- append(states, state)
}
output <- data.frame(hospital=best_hospitals, state=states)
}
rankhospital <- function(state, outcome, num="best"){
# state <- "TX"
# outcome <- "heart failure"
# num <- "5"
#
#initialize the outcome
outcome_list <- c(11,17,23)
names(outcome_list) <- c("heart attack", "heart failure", "pneumonia")
#the collumn of name
name_col <- 2
#check outcome input
if (!(outcome %in% names(outcome_list))){
stop("invalid outcome")
}
#set the outcome to the column
col_id = outcome_list[outcome]
#check the state input
states_list <- c("AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DC", "DE", "FL", "GA", "GU", "HI", "IA", "ID", "IL", "IN", "KS", "KY",
"LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK",
"OR", "PA", "PR", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VI", "VT", "WA", "WI", "WV", "WY")
if (!(state %in% states_list)){
stop("invalid state")
}
#--------------------read and process the data-------------------------
#read the data
outcome.all <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
# outcome.all <- dataset
#convert character to numeric
outcome.all[,outcome_list[outcome]] <- as.numeric(outcome.all[,outcome_list[outcome]])
#filter the data by state
check_state <- outcome.all$State == state
outcome.state <- outcome.all[check_state,]
#clean the data
is_na <- is.na(outcome.state[,col_id])
outcome.state <- outcome.state[!is_na,]
#the number of hospitals in the state
num_hospitals <- nrow(outcome.state)
#check the num input
if (num == "best"){
num <- 1
}
if (num == "worst"){
num = num_hospitals
}
if (num <1 || num > num_hospitals){
return(NA)
}
#order the hospitals by outcome
outcome.order <- outcome.state[with(outcome.state, order(outcome.state[,col_id],
outcome.state[,name_col])),]
best_hospital <- outcome.order[as.numeric(num),2]
}
submit()
jpeg()
file()
serialize()
save()
?boxplot
?xyplot
?base
library(help='base')
?pch
?splom()
bwplot()
bwplot()
barplot()
?bwplot()
?barplot()
?lines()
?xyplot()
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
xyplot(weight ~ Time | Diet, BodyWeight)
xyplot(1:10 ~ 2:20)
plot(1,2)
